datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  username  String?  @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  notes     Note[]
  games     Game[]
  tasks     Task[]
}

model Note {
  id        String   @id @default(cuid())
  title     String
  body      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId    String
}

model Game {
  id          String   @id @default(cuid())
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId      String
  teams       Team[]
  tiles       Tile[]
  title       String
  description String?
  startDate   DateTime
  endDate     DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Team {
  id          String   @id @default(cuid())
  game        Game     @relation(fields: [gameId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  gameId      String
  name        String
  description String?
  competitors String[]
}

model Tile {
  id         Int       @id @default(autoincrement())
  tileTask   TileTask?
  tileTaskId String?
  game       Game      @relation(fields: [gameId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  gameId     String
}

model Task {
  id           String   @id @default(cuid())
  title        String
  defaultValue Int
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId       String
  image        String
  imageDetail  String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model TileTask {
  id     String @id @default(cuid())
  taskId String
  value  Int
  tile   Tile   @relation(fields: [tileId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  tileId Int    @unique
}
